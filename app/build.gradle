plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'

    id 'kotlin-kapt'
    id 'androidx.navigation.safeargs'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
}
def providedVersionName = "1.0"
def providedApkName = "payment_app-V${providedVersionName}.apk"

android {
    namespace 'com.nivin.nivinecommerceapp'
    compileSdk 33

    defaultConfig {
        applicationId "com.nivin.nivinecommerceapp"
        minSdk 26
        targetSdk 33
        versionCode 1
        versionName providedVersionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        final Properties properties = new Properties()
        properties.load(project.rootProject.file("local.properties").newDataInputStream())

        buildConfigField "String", "ENCRYPTION_KEY", "\"${properties.getProperty("ENCRYPTION_KEY")}\""
    }
    applicationVariants.all { variant ->
        variant.outputs.all {
            outputFileName = providedApkName
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        viewBinding true
        dataBinding true
    }

}



dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'com.google.android.material:material:1.8.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    androidTestImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'



    // Hilt
    implementation "com.google.dagger:hilt-android:2.43.2"
    androidTestImplementation 'org.junit.jupiter:junit-jupiter'
    kapt "com.google.dagger:hilt-compiler:2.43.2"

    // Glide
    implementation 'com.github.skydoves:landscapist-glide:1.6.1'

    // Retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation 'com.google.code.gson:gson:2.9.1'
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    // SSP-SDP library
    implementation 'com.intuit.ssp:ssp-android:1.1.0'
    implementation 'com.intuit.sdp:sdp-android:1.1.0'


    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:2.5.1"
    implementation "androidx.activity:activity-ktx:1.6.1"

    implementation 'com.razorpay:checkout:1.6.26'
}

// saves the apk file in the debugApk folder
task copyApk(type: Copy) {
    def sourceDir = layout.buildDirectory.dir("outputs/apk/debug/$providedApkName")
    def destDir = "$rootDir/debugApk"
    from sourceDir
    into destDir
    doLast {
        def file = new File(destDir, providedApkName)
        ant.checksum file: file.path
    }
}
tasks.whenTaskAdded { task ->
    if (task.name == "assembleDebug") {
        task.finalizedBy "copyApk"
    }
}
